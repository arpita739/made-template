transform TempConvert
{
  from tempCelsius oftype decimal;
  to tempFahrenheit oftype decimal;

  tempFahrenheit: (tempCelsius * 9/5) + 32;
}

pipeline WeatherPipeline{




    block WeatherExtractor  oftype HttpExtractor {

        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }
    block ZipInterpreter oftype ArchiveInterpreter { archiveType: "zip";}


     block WeatherFilePicker oftype FilePicker {
       path: "/data.csv";
     }

    block WeatherCSVInterpreter oftype CSVInterpreter {
	delimiter: ';';
    }
    block TextInterpreter oftype TextFileInterpreter {}
    block ColDeleter oftype ColumnDeleter { delete: [column F, column G, column H, column I]; }
    block ColDataSelector oftype CellRangeSelector {select: range A1:K*;}

     block WeatherTableInterpreter oftype TableInterpreter {
       header: true;
       columns: [
        "Geraet" oftype integer,
        "Hersteller" oftype text,
        "Model" oftype text,
        "Monat" oftype integer,
        "Temperatur in 째C (DWD)" oftype decimal,
        "Batterietemperatur in 째C" oftype decimal,
        "Geraet aktiv" oftype text,

       ];
     }

     block TransformerA oftype TableTransformer {
       inputColumns: ['Temperatur in 째C (DWD)'];
       outputColumn: 'Temperatur';

       use:TempConvert ;
     }
     block TransformerB oftype TableTransformer {
       inputColumns: ['Batterietemperatur in 째C'];
       outputColumn: 'Batterietemperatur';

       use:TempConvert ;
     }

    block WeatherLoader oftype SQLiteLoader {
            table: "temperatures";
            file: "./temperatures.sqlite";
            dropTable: false;
            }
    WeatherExtractor
    ->ZipInterpreter
    -> WeatherFilePicker
    -> WeatherTextFileInterpreter
    -> WeatherCSVInterpreter
    -> TextInterpreter
    ->ColDeleter
    ->ColDataSelector
    -> WeatherTableInterpreter
    ->TransformerA
    ->TransformerB
    -> WeatherLoader;

}